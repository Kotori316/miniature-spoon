name: Terraform Validation

on:
  push:
    paths:
      - '**.tf'
      - '**.lock.hcl'
      - '.github/workflows/terraform-validation.yaml'
    branches:
      - main
  pull_request:
    paths:
      - '**.tf'
      - '**.lock.hcl'
      - '.github/workflows/terraform-validation.yaml'

jobs:
  lint:
    runs-on: ubuntu-latest
    timeout-minutes: 3

    steps:
      - run: echo "${{ github.actor }}"
      - uses: actions/checkout@v4
      - name: Terraform Format
        run: terraform fmt -recursive -check ./
      - uses: terraform-linters/setup-tflint@v4
      - name: Init tflint
        run: tflint --init
        working-directory: terraform
      - name: Run tflint
        run: tflint -f compact
        working-directory: terraform
      - name: Init tflint
        run: tflint --init
        working-directory: reposilite-server-terraform
      - name: Run tflint
        run: tflint -f compact
        working-directory: reposilite-server-terraform

  plan:
    runs-on: ubuntu-latest
    timeout-minutes: 5
    if: (github.event_name == 'push' || (github.event_name == 'pull_request' && contains(fromJSON('["Kotori316", "renovate[bot]"]'), github.actor)))
    permissions:
      id-token: write
      contents: read
    concurrency:
      group: terraform
      cancel-in-progress: false
    steps:
      - uses: actions/checkout@v4
      - uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{secrets.GCP_IDENTITY_PROVIDER}}
          service_account: ${{secrets.GCP_TERRAFORM_PLANNER_SERVICE_ACCOUNT}}
      - name: Prepare log
        id: log
        run: |
          log_name="$(date "+%Y%m%d-%H%M%S")-terraform.log"
          echo "${{ github.actor }}" >> "/tmp/${log_name}"
          echo "name=${log_name}" >> $GITHUB_OUTPUT
          echo "repo=$(basename "${{github.repository}}")" >> $GITHUB_OUTPUT
      - name: Init main config
        run: terraform init
        working-directory: terraform
      - name: Check plan(main)
        run: |
          echo "Cloudflare pages terraform" >>"/tmp/${{steps.log.outputs.name}}"
          terraform plan -detailed-exitcode -no-color >>"/tmp/${{steps.log.outputs.name}}" 2>&1 && echo "No changes" || (echo "Plan detected changes"; false)
        working-directory: terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Init reposilite config
        run: terraform init
        working-directory: reposilite-server-terraform
      - name: Check plan(reposilite)
        run: |
          echo "Reposilite terraform" >>"/tmp/${{steps.log.outputs.name}}"
          terraform plan -detailed-exitcode -no-color >>"/tmp/${{steps.log.outputs.name}}" 2>&1 && echo "No changes" || (echo "Plan detected changes"; false)
        working-directory: reposilite-server-terraform
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      - name: Upload log
        if: ${{ !cancelled() }}
        uses: google-github-actions/upload-cloud-storage@v2
        with:
          path: /tmp/${{steps.log.outputs.name}}
          destination: kotori316-logs/${{steps.log.outputs.repo}}
          process_gcloudignore: false
